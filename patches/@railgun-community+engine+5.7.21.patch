diff --git a/node_modules/@railgun-community/engine/dist/contracts/railgun-smart-wallet/railgun-smart-wallet.js b/node_modules/@railgun-community/engine/dist/contracts/railgun-smart-wallet/railgun-smart-wallet.js
index 7e1da90..792301a 100644
--- a/node_modules/@railgun-community/engine/dist/contracts/railgun-smart-wallet/railgun-smart-wallet.js
+++ b/node_modules/@railgun-community/engine/dist/contracts/railgun-smart-wallet/railgun-smart-wallet.js
@@ -253,6 +253,10 @@ class RailgunSmartWalletContract extends events_1.default {
     async getHistoricalEvents(chain, initialStartBlock, latestBlock, getNextStartBlockFromValidMerkletree, eventsListener, eventsNullifierListener, eventsUnshieldListener, setLastSyncedBlock) {
         const engineV3StartBlockNumber = RailgunSmartWalletContract.getEngineV2StartBlockNumber(chain);
         const engineV3ShieldEventUpdate030923BlockNumber = RailgunSmartWalletContract.getEngineV2ShieldEventUpdate030923BlockNumber(chain);
+
+        // Cookbook does not need event scanning.
+        return;
+
         // TODO: Possible data integrity issue in using commitment block numbers.
         // Unshields and Nullifiers are scanned from the latest commitment block.
         // Unshields/Nullifiers are not validated using the same merkleroot validation.
diff --git a/node_modules/@railgun-community/engine/dist/railgun-engine.js b/node_modules/@railgun-community/engine/dist/railgun-engine.js
index b7ca65a..21fdd95 100644
--- a/node_modules/@railgun-community/engine/dist/railgun-engine.js
+++ b/node_modules/@railgun-community/engine/dist/railgun-engine.js
@@ -292,8 +292,8 @@ class RailgunEngine extends events_1.default {
             debugger_1.default.log(`Skipping merkletree scan: skipMerkletreeScans set on RAILGUN Engine.`);
             return;
         }
-        if (!this.hasTXIDMerkletree(txidVersion, chain)) {
-            debugger_1.default.log(`Cannot scan history. TXID merkletree not yet loaded for ${txidVersion}, chain ${chain.type}:${chain.id}.`);
+        if (!this.hasUTXOMerkletree(txidVersion, chain)) {
+            debugger_1.default.log(`Cannot scan history. UTXO merkletree not yet loaded for ${txidVersion}, chain ${chain.type}:${chain.id}.`);
             return;
         }
         if (!(0, is_defined_1.isDefined)(contract_store_1.ContractStore.railgunSmartWalletContracts[chain.type]?.[chain.id])) {
